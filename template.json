{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "sites_teltonikapoc_name": {
      "defaultValue": "teltonikapoc",
      "type": "String"
    },
    "images_aikido_1_name": {
      "defaultValue": "aikido-1",
      "type": "String"
    },
    "servers_aikdo_name": {
      "defaultValue": "aikdo",
      "type": "String"
    },
    "servers_repl_dest_name": {
      "defaultValue": "repl-dest",
      "type": "String"
    },
    "sites_EventHubRepFunction_name": {
      "defaultValue": "EventHubRepFunction",
      "type": "String"
    },
    "storageAccounts_evthub_name": {
      "defaultValue": "evthub",
      "type": "String"
    },
    "virtualMachines_Aikido_2_name": {
      "defaultValue": "Aikido-2",
      "type": "String"
    },
    "virtualMachines_ford_demo_name": {
      "defaultValue": "ford-demo",
      "type": "String"
    },
    "publicIPAddresses_db2vm_ip_name": {
      "defaultValue": "db2vm-ip",
      "type": "String"
    },
    "snapshots_aikido1_fullimage_name": {
      "defaultValue": "aikido1-fullimage",
      "type": "String"
    },
    "virtualMachines_Aikido_ford_name": {
      "defaultValue": "Aikido-ford",
      "type": "String"
    },
    "virtualMachines_kafka_azure_name": {
      "defaultValue": "kafka-azure",
      "type": "String"
    },
    "servers_test_replication_name": {
      "defaultValue": "test-replication",
      "type": "String"
    },
    "publicIPAddresses_aikido_ip_name": {
      "defaultValue": "aikido-ip",
      "type": "String"
    },
    "namespaces_replication_test_name": {
      "defaultValue": "replication-test",
      "type": "String"
    },
    "storageAccounts_evthubnodejs_name": {
      "defaultValue": "evthubnodejs",
      "type": "String"
    },
    "virtualMachines_db2_win_azure_name": {
      "defaultValue": "db2-win-azure",
      "type": "String"
    },
    "networkInterfaces_aikido_1186_name": {
      "defaultValue": "aikido-1186",
      "type": "String"
    },
    "networkInterfaces_aikido_2416_name": {
      "defaultValue": "aikido-2416",
      "type": "String"
    },
    "publicIPAddresses_aikido_1_ip_name": {
      "defaultValue": "aikido-1-ip",
      "type": "String"
    },
    "publicIPAddresses_Aikido_2_ip_name": {
      "defaultValue": "Aikido-2-ip",
      "type": "String"
    },
    "components_EventHubToCosmosDB_name": {
      "defaultValue": "EventHubToCosmosDB",
      "type": "String"
    },
    "connections_forddemocoonection_name": {
      "defaultValue": "forddemocoonection",
      "type": "String"
    },
    "networkInterfaces_ford_demo438_name": {
      "defaultValue": "ford-demo438",
      "type": "String"
    },
    "publicIPAddresses_db2_azure_ip_name": {
      "defaultValue": "db2-azure-ip",
      "type": "String"
    },
    "publicIPAddresses_ford_demo_ip_name": {
      "defaultValue": "ford-demo-ip",
      "type": "String"
    },
    "virtualNetworks_ford_demo_vnet_name": {
      "defaultValue": "ford-demo-vnet",
      "type": "String"
    },
    "components_eventhubrepfunction_name": {
      "defaultValue": "eventhubrepfunction",
      "type": "String"
    },
    "networkSecurityGroups_db2vm_nsg_name": {
      "defaultValue": "db2vm-nsg",
      "type": "String"
    },
    "storageAccounts_teltonikafmc003_name": {
      "defaultValue": "teltonikafmc003",
      "type": "String"
    },
    "networkInterfaces_aikido_ford401_name": {
      "defaultValue": "aikido-ford401",
      "type": "String"
    },
    "networkInterfaces_kafka_azure772_name": {
      "defaultValue": "kafka-azure772",
      "type": "String"
    },
    "publicIPAddresses_Aikido_ford_ip_name": {
      "defaultValue": "Aikido-ford-ip",
      "type": "String"
    },
    "publicIPAddresses_kafka_azure_ip_name": {
      "defaultValue": "kafka-azure-ip",
      "type": "String"
    },
    "networkInterfaces_db2_win_azure41_name": {
      "defaultValue": "db2-win-azure41",
      "type": "String"
    },
    "services_Ford_Data_Migration_name": {
      "defaultValue": "Ford-Data-Migration",
      "type": "String"
    },
    "networkSecurityGroups_aikido_1_nsg_name": {
      "defaultValue": "aikido-1-nsg",
      "type": "String"
    },
    "networkSecurityGroups_Aikido_2_nsg_name": {
      "defaultValue": "Aikido-2-nsg",
      "type": "String"
    },
    "storageAccounts_sqlvamqrcrrkf6bowu_name": {
      "defaultValue": "sqlvamqrcrrkf6bowu",
      "type": "String"
    },
    "serverfarms_ASP_AzureGCPMigration_817c_name": {
      "defaultValue": "ASP-AzureGCPMigration-817c",
      "type": "String"
    },
    "serverfarms_ASP_AzureGCPMigration_86c4_name": {
      "defaultValue": "ASP-AzureGCPMigration-86c4",
      "type": "String"
    },
    "serverfarms_ASP_AzureGCPMigration_9242_name": {
      "defaultValue": "ASP-AzureGCPMigration-9242",
      "type": "String"
    },
    "serverfarms_ASP_AzureGCPMigration_a09a_name": {
      "defaultValue": "ASP-AzureGCPMigration-a09a",
      "type": "String"
    },
    "serverfarms_ASP_AzureGCPMigration_a1f7_name": {
      "defaultValue": "ASP-AzureGCPMigration-a1f7",
      "type": "String"
    },
    "serverfarms_ASP_AzureGCPMigration_a636_name": {
      "defaultValue": "ASP-AzureGCPMigration-a636",
      "type": "String"
    },
    "serverfarms_ASP_AzureGCPMigration_bfb5_name": {
      "defaultValue": "ASP-AzureGCPMigration-bfb5",
      "type": "String"
    },
    "databaseAccounts_aikidocosmoslab_name": {
      "defaultValue": "aikidocosmoslab",
      "type": "String"
    },
    "networkSecurityGroups_ford_demo_nsg_name": {
      "defaultValue": "ford-demo-nsg",
      "type": "String"
    },
    "virtualNetworks_evthub2_vNet5886669_name": {
      "defaultValue": "evthub2_vNet5886669",
      "type": "String"
    },
    "storageAccounts_eventhubrepfunction_name": {
      "defaultValue": "eventhubrepfunction",
      "type": "String"
    },
    "serverfarms_ASP_EventHubRepFunction_0373_name": {
      "defaultValue": "ASP-EventHubRepFunction-0373",
      "type": "String"
    },
    "networkSecurityGroups_Aikido_ford_nsg_name": {
      "defaultValue": "Aikido-ford-nsg",
      "type": "String"
    },
    "networkSecurityGroups_kafka_azure_nsg_name": {
      "defaultValue": "kafka-azure-nsg",
      "type": "String"
    },
    "networkSecurityGroups_db2_win_azure_nsg_name": {
      "defaultValue": "db2-win-azure-nsgdb2-win-azure-nsg",
      "type": "String"
    },
    "networkSecurityGroups_db2winazurensg855_name": {
      "defaultValue": "db2winazurensg855",
      "type": "String"
    },
    "virtualNetworks_eventhubrep_vNet2888792_name": {
      "defaultValue": "eventhubrep_vNet2888792",
      "type": "String"
    },
    "containerGroups_mysql_on_azure_name": {
      "defaultValue": "mysql-on-azure",
      "type": "String"
    },
    "virtualNetworks_Azure_GCP_Migration_vnet_name": {
      "defaultValue": "Azure_GCP_Migration-vnet",
      "type": "String"
    },
    "localNetworkGateways_forddemo_localnetwork_name": {
      "defaultValue": "forddemo-localnetwork",
      "type": "String"
    },
    "virtualNetworks_Azure_GCP_Migrationvnet144_name": {
      "defaultValue": "Azure_GCP_Migrationvnet144",
      "type": "String"
    },
    "virtualNetworks_Azure_GCP_Migrationvnet955_name": {
      "defaultValue": "Azure_GCP_Migrationvnet955",
      "type": "String"
    },
    "virtualNetworkGateways_ford_demo_vnetgateway_name": {
      "defaultValue": "ford-demo-vnetgateway",
      "type": "String"
    },
    "networkInterfaces_NIC_hpdrk254599xz78qa6gchuvc_name": {
      "defaultValue": "NIC-hpdrk254599xz78qa6gchuvc",
      "type": "String"
    },
    "publicIPAddresses_ford_demo_vnetgateway_publicIP_name": {
      "defaultValue": "ford-demo-vnetgateway-publicIP",
      "type": "String"
    },
    "disks_aikido_1_disk1_9d6cfcc789df49ffbe694531e73c2189_name": {
      "defaultValue": "aikido-1_disk1_9d6cfcc789df49ffbe694531e73c2189",
      "type": "String"
    },
    "smartdetectoralertrules_failure_anomalies___eventhubtocosmosdb_name": {
      "defaultValue": "failure anomalies - eventhubtocosmosdb",
      "type": "String"
    },
    "smartdetectoralertrules_failure_anomalies___eventhubrepfunction_name": {
      "defaultValue": "failure anomalies - eventhubrepfunction",
      "type": "String"
    },
    "actiongroups_application_insights_smart_detection_externalid": {
      "defaultValue": "/subscriptions/3387f4fe-efd5-44e2-a4a2-4581ab04bf99/resourceGroups/anandkumar_datamanagement_coe/providers/microsoft.insights/actiongroups/application insights smart detection",
      "type": "String"
    },
    "snapshots_aikido_1_0_0tojge4cqpy_externalid": {
      "defaultValue": "/subscriptions/3387f4fe-efd5-44e2-a4a2-4581ab04bf99/resourceGroups/Azure_GCP_Migration/providers/Microsoft.Compute/snapshots/aikido-1_0_0tojge4cqpy",
      "type": "String"
    },
    "virtualMachines_aikido_externalid": {
      "defaultValue": "/subscriptions/3387f4fe-efd5-44e2-a4a2-4581ab04bf99/resourceGroups/Azure_GCP_Migration/providers/Microsoft.Compute/virtualMachines/aikido",
      "type": "String"
    },
    "disks_aikido_OsDisk_1_3cfd7052ac0544f19cfb2eb24a9335d4_externalid": {
      "defaultValue": "/subscriptions/3387f4fe-efd5-44e2-a4a2-4581ab04bf99/resourceGroups/AZURE_GCP_MIGRATION/providers/Microsoft.Compute/disks/aikido_OsDisk_1_3cfd7052ac0544f19cfb2eb24a9335d4",
      "type": "String"
    }
  },
  "variables": {
    "location": "eastus"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/disks",
      "apiVersion": "2021-04-01",
      "name": "[parameters('disks_aikido_1_disk1_9d6cfcc789df49ffbe694531e73c2189_name')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "StandardSSD_LRS",
        "tier": "Standard"
      },
      "properties": {
        "osType": "Windows",
        "hyperVGeneration": "V1",
        "creationData": {
          "createOption": "Copy",
          "sourceResourceId": "[parameters('snapshots_aikido_1_0_0tojge4cqpy_externalid')]"
        },
        "diskSizeGB": 127,
        "diskIOPSReadWrite": 500,
        "diskMBpsReadWrite": 60,
        "encryption": {
          "type": "EncryptionAtRestWithPlatformKey"
        },
        "networkAccessPolicy": "AllowAll",
        "publicNetworkAccess": "Enabled",
        "diskState": "Unattached"
      }
    },
    {
      "type": "Microsoft.Compute/images",
      "apiVersion": "2021-07-01",
      "name": "[parameters('images_aikido_1_name')]",
      "location": "[variables('location')]",
      "properties": {
        "sourceVirtualMachine": {
          "id": "[parameters('virtualMachines_aikido_externalid')]"
        },
        "storageProfile": {
          "osDisk": {
            "osType": "Windows",
            "osState": "Generalized",
            "diskSizeGB": 127,
            "managedDisk": {
              "id": "[parameters('disks_aikido_OsDisk_1_3cfd7052ac0544f19cfb2eb24a9335d4_externalid')]"
            },
            "caching": "ReadWrite",
            "storageAccountType": "StandardSSD_LRS"
          },
          "dataDisks": [],
          "zoneResilient": false
        },
        "hyperVGeneration": "V1"
      }
    },
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2021-09-01",
      "name": "[parameters('containerGroups_mysql_on_azure_name')]",
      "location": "[variables('location')]",
      "properties": {
        "sku": "Standard",
        "containers": [
          {
            "name": "[parameters('containerGroups_mysql_on_azure_name')]",
            "properties": {
              "image": "debezium/example-mysql:1.6",
              "ports": [
                {
                  "protocol": "TCP",
                  "port": 80
                },
                {
                  "protocol": "TCP",
                  "port": 3306
                }
              ],
              "environmentVariables": [
                {
                  "name": "MYSQL_ROOT_PASSWORD",
                  "value": "debezium"
                },
                {
                  "name": "MYSQL_USER",
                  "value": "mysqluser"
                },
                {
                  "name": "MYSQL_PASSWORD",
                  "value": "mysqlpw"
                }
              ],
              "resources": {
                "requests": {
                  "memoryInGB": 1.5,
                  "cpu": 1
                }
              }
            }
          }
        ],
        "initContainers": [],
        "restartPolicy": "OnFailure",
        "ipAddress": {
          "ports": [
            {
              "protocol": "TCP",
              "port": 80
            },
            {
              "protocol": "TCP",
              "port": 3306
            }
          ],
          "type": "Public",
          "dnsNameLabel": "azuremysql"
        },
        "osType": "Linux"
      }
    },
    {
      "type": "Microsoft.DBforMySQL/servers",
      "apiVersion": "2017-12-01",
      "name": "[parameters('servers_aikdo_name')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "GP_Gen5_4",
        "tier": "GeneralPurpose",
        "family": "Gen5",
        "capacity": 4
      },
      "properties": {
        "storageProfile": {
          "storageMB": 102400,
          "backupRetentionDays": 7,
          "geoRedundantBackup": "Disabled",
          "storageAutogrow": "Enabled"
        },
        "version": "5.7",
        "sslEnforcement": "Disabled",
        "minimalTlsVersion": "TLSEnforcementDisabled",
        "infrastructureEncryption": "Disabled",
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.DBforMySQL/servers",
      "apiVersion": "2017-12-01",
      "name": "[parameters('servers_repl_dest_name')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "B_Gen5_2",
        "tier": "Basic",
        "family": "Gen5",
        "capacity": 2
      },
      "properties": {
        "administratorLogin": "useradmin",
        "administratorLoginPassword": "Passwdqsaa212",
        "storageProfile": {
          "storageMB": 51200,
          "backupRetentionDays": 7,
          "geoRedundantBackup": "Disabled",
          "storageAutogrow": "Enabled"
        },
        "version": "5.7",
        "sslEnforcement": "Disabled",
        "minimalTlsVersion": "TLSEnforcementDisabled",
        "infrastructureEncryption": "Disabled",
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.DBforMySQL/servers",
      "apiVersion": "2017-12-01",
      "name": "[parameters('servers_test_replication_name')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "B_Gen5_2",
        "tier": "Basic",
        "family": "Gen5",
        "capacity": 2
      },
      "properties": {
        "administratorLogin": "useradmin",
        "administratorLoginPassword": "Passwdqsaa212",
        "storageProfile": {
          "storageMB": 15360,
          "backupRetentionDays": 7,
          "geoRedundantBackup": "Disabled",
          "storageAutogrow": "Enabled"
        },
        "version": "5.7",
        "sslEnforcement": "Disabled",
        "minimalTlsVersion": "TLSEnforcementDisabled",
        "infrastructureEncryption": "Disabled",
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2021-10-15",
      "name": "[parameters('databaseAccounts_aikidocosmoslab_name')]",
      "location": "[variables('location')]",
      "tags": {
        "defaultExperience": "Core (SQL)",
        "hidden-cosmos-mmspecial": ""
      },
      "kind": "GlobalDocumentDB",
      "identity": {
        "type": "None"
      },
      "properties": {
        "publicNetworkAccess": "Enabled",
        "enableAutomaticFailover": false,
        "enableMultipleWriteLocations": false,
        "isVirtualNetworkFilterEnabled": false,
        "virtualNetworkRules": [],
        "disableKeyBasedMetadataWriteAccess": false,
        "enableFreeTier": false,
        "enableAnalyticalStorage": false,
        "analyticalStorageConfiguration": {
          "schemaType": "WellDefined"
        },
        "databaseAccountOfferType": "Standard",
        "defaultIdentity": "FirstPartyIdentity",
        "networkAclBypass": "None",
        "disableLocalAuth": false,
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session",
          "maxIntervalInSeconds": 5,
          "maxStalenessPrefix": 100
        },
        "locations": [
          {
            "locationName": "[variables('location')]",
            "provisioningState": "Succeeded",
            "failoverPriority": 0,
            "isZoneRedundant": false
          }
        ],
        "cors": [],
        "capabilities": [
          {
            "name": "EnableServerless"
          }
        ],
        "ipRules": [],
        "backupPolicy": {
          "type": "Periodic",
          "periodicModeProperties": {
            "backupIntervalInMinutes": 240,
            "backupRetentionIntervalInHours": 8,
            "backupStorageRedundancy": "Geo"
          }
        },
        "networkAclBypassResourceIds": []
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "2021-11-01",
      "name": "[parameters('namespaces_replication_test_name')]",
      "location": "[variables('location')]",
      "tags": {
        "env": "poc"
      },
      "sku": {
        "name": "Basic",
        "tier": "Basic",
        "capacity": 1
      },
      "properties": {
        "disableLocalAuth": false,
        "zoneRedundant": true,
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0,
        "kafkaEnabled": false
      }
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2020-02-02",
      "name": "[parameters('components_eventhubrepfunction_name')]",
      "location": "[variables('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "RetentionInDays": 90,
        "IngestionMode": "ApplicationInsights",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2020-02-02",
      "name": "[parameters('components_EventHubToCosmosDB_name')]",
      "location": "[variables('location')]",
      "tags": {
        "hidden-link:/subscriptions/3387f4fe-efd5-44e2-a4a2-4581ab04bf99/resourceGroups/Azure_GCP_Migration/providers/Microsoft.Web/sites/EventHubToCosmosDB": "Resource"
      },
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Flow_Type": "Redfield",
        "Request_Source": "AppServiceEnablementCreate",
        "RetentionInDays": 90,
        "IngestionMode": "ApplicationInsights",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "Microsoft.Network/localNetworkGateways",
      "apiVersion": "2020-11-01",
      "name": "[parameters('localNetworkGateways_forddemo_localnetwork_name')]",
      "location": "[variables('location')]",
      "properties": {
        "localNetworkAddressSpace": {
          "addressPrefixes": ["10.10.0.0/16"]
        },
        "gatewayIpAddress": "35.247.146.39"
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-11-01",
      "name": "[parameters('networkSecurityGroups_aikido_1_nsg_name')]",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "RDP",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "MySQL_IP_8080",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3306",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 310,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "MySQL_OP_8080",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3306",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Outbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-11-01",
      "name": "[parameters('networkSecurityGroups_Aikido_2_nsg_name')]",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "RDP",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "Port_8080",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3306",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 310,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "Port_8081",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3306",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Outbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-11-01",
      "name": "[parameters('networkSecurityGroups_Aikido_ford_nsg_name')]",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "RDP",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-11-01",
      "name": "[parameters('networkSecurityGroups_db2vm_nsg_name')]",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "RDP",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 320,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "HTTPS",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 340,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "HTTP",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 360,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "Port_8080",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 370,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-11-01",
      "name": "[parameters('networkSecurityGroups_db2_win_azure_nsg_name')]",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "RDP",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "SSH",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 320,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "HTTPS",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 340,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "HTTP",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 360,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-11-01",
      "name": "[parameters('networkSecurityGroups_db2winazurensg855_name')]",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "RDP",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "SSH",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 320,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "HTTPS",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 340,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "HTTP",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 360,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "Port_8080",
            "properties": {
              "description": "allow all",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 370,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "allow_all",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 380,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-11-01",
      "name": "[parameters('networkSecurityGroups_ford_demo_nsg_name')]",
      "location": "[variables('location')]",
      "tags": {
        "Name": "ford-demo-server"
      },
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-11-01",
      "name": "[parameters('networkSecurityGroups_kafka_azure_nsg_name')]",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "HTTP",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 320,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "HTTPS",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 340,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "RDP",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 360,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "Port_8080",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 370,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "Port_asterix",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Outbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "name": "[parameters('publicIPAddresses_aikido_1_ip_name')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Basic",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "name": "[parameters('publicIPAddresses_Aikido_2_ip_name')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Basic",
        "tier": "Regional"
      },
      "properties": {
        "ipAddress": "13.71.122.249",
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "name": "[parameters('publicIPAddresses_Aikido_ford_ip_name')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Basic",
        "tier": "Regional"
      },
      "properties": {
        "ipAddress": "20.44.54.48",
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "name": "[parameters('publicIPAddresses_aikido_ip_name')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Basic",
        "tier": "Regional"
      },
      "properties": {
        "ipAddress": "52.172.97.16",
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "name": "[parameters('publicIPAddresses_db2_azure_ip_name')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Basic",
        "tier": "Regional"
      },
      "properties": {
        "ipAddress": "13.90.57.83",
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "name": "[parameters('publicIPAddresses_db2vm_ip_name')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Basic",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "name": "[parameters('publicIPAddresses_ford_demo_ip_name')]",
      "location": "[variables('location')]",
      "tags": {
        "Name": "ford-demo-server"
      },
      "sku": {
        "name": "Basic",
        "tier": "Regional"
      },
      "properties": {
        "ipAddress": "13.76.82.102",
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "name": "[parameters('publicIPAddresses_ford_demo_vnetgateway_publicIP_name')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Basic",
        "tier": "Regional"
      },
      "properties": {
        "ipAddress": "137.116.144.174",
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "name": "[parameters('publicIPAddresses_kafka_azure_ip_name')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Basic",
        "tier": "Regional"
      },
      "properties": {
        "ipAddress": "20.112.100.64",
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-11-01",
      "name": "[parameters('virtualNetworks_Azure_GCP_Migration_vnet_name')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": ["10.0.0.0/16"]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "10.0.0.0/24",
              "delegations": [],
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          }
        ],
        "virtualNetworkPeerings": [],
        "enableDdosProtection": false
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-11-01",
      "name": "[parameters('virtualNetworks_Azure_GCP_Migrationvnet144_name')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": ["10.1.0.0/16"]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "10.1.0.0/24",
              "delegations": [],
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          }
        ],
        "virtualNetworkPeerings": [],
        "enableDdosProtection": false
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-11-01",
      "name": "[parameters('virtualNetworks_Azure_GCP_Migrationvnet955_name')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": ["10.2.0.0/16"]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "10.2.0.0/24",
              "delegations": [],
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          }
        ],
        "virtualNetworkPeerings": [],
        "enableDdosProtection": false
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-11-01",
      "name": "[parameters('virtualNetworks_eventhubrep_vNet2888792_name')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": ["10.3.0.0/16"]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "10.3.0.0/24",
              "serviceEndpoints": [
                {
                  "service": "Microsoft.Storage",
                  "locations": ["eastus", "westus"]
                }
              ],
              "delegations": [],
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          }
        ],
        "virtualNetworkPeerings": [],
        "enableDdosProtection": false
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-11-01",
      "name": "[parameters('virtualNetworks_evthub2_vNet5886669_name')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": ["10.4.0.0/16"]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "10.4.0.0/24",
              "serviceEndpoints": [
                {
                  "service": "Microsoft.Storage",
                  "locations": ["eastus", "westus"]
                }
              ],
              "delegations": [],
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          }
        ],
        "virtualNetworkPeerings": [],
        "enableDdosProtection": false
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-11-01",
      "name": "[parameters('virtualNetworks_ford_demo_vnet_name')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": ["172.16.0.0/16"]
        },
        "subnets": [
          {
            "name": "ford-demo-subnet",
            "properties": {
              "addressPrefix": "172.16.0.0/24",
              "delegations": [],
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          },
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "172.16.1.0/24",
              "serviceEndpoints": [],
              "delegations": [],
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          }
        ],
        "virtualNetworkPeerings": [],
        "enableDdosProtection": false
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-06-01",
      "name": "[parameters('storageAccounts_eventhubrepfunction_name')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "Storage",
      "properties": {
        "minimumTlsVersion": "TLS1_0",
        "allowBlobPublicAccess": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-06-01",
      "name": "[parameters('storageAccounts_evthub_name')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "defaultToOAuthAuthentication": false,
        "allowCrossTenantReplication": false,
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": true,
        "allowSharedKeyAccess": true,
        "isHnsEnabled": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-06-01",
      "name": "[parameters('storageAccounts_evthubnodejs_name')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "defaultToOAuthAuthentication": false,
        "allowCrossTenantReplication": true,
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": true,
        "allowSharedKeyAccess": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-06-01",
      "name": "[parameters('storageAccounts_sqlvamqrcrrkf6bowu_name')]",
      "location": "[variables('location')]",
      "tags": {
        "ms-resource-usage": "azure-cloud-shell"
      },
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-06-01",
      "name": "[parameters('storageAccounts_teltonikafmc003_name')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": true,
        "allowSharedKeyAccess": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[parameters('serverfarms_ASP_AzureGCPMigration_817c_name')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "kind": "functionapp",
      "properties": {
        "perSiteScaling": false,
        "elasticScaleEnabled": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0,
        "zoneRedundant": false
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[parameters('serverfarms_ASP_AzureGCPMigration_86c4_name')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "kind": "functionapp",
      "properties": {
        "perSiteScaling": false,
        "elasticScaleEnabled": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0,
        "zoneRedundant": false
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[parameters('serverfarms_ASP_AzureGCPMigration_9242_name')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "kind": "functionapp",
      "properties": {
        "perSiteScaling": false,
        "elasticScaleEnabled": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0,
        "zoneRedundant": false
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[parameters('serverfarms_ASP_AzureGCPMigration_a09a_name')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "kind": "functionapp",
      "properties": {
        "perSiteScaling": false,
        "elasticScaleEnabled": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0,
        "zoneRedundant": false
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[parameters('serverfarms_ASP_AzureGCPMigration_a1f7_name')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "kind": "functionapp",
      "properties": {
        "perSiteScaling": false,
        "elasticScaleEnabled": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0,
        "zoneRedundant": false
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[parameters('serverfarms_ASP_AzureGCPMigration_a636_name')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "kind": "functionapp",
      "properties": {
        "perSiteScaling": false,
        "elasticScaleEnabled": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0,
        "zoneRedundant": false
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[parameters('serverfarms_ASP_AzureGCPMigration_bfb5_name')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "kind": "functionapp",
      "properties": {
        "perSiteScaling": false,
        "elasticScaleEnabled": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0,
        "zoneRedundant": false
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[parameters('serverfarms_ASP_EventHubRepFunction_0373_name')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "kind": "functionapp",
      "properties": {
        "perSiteScaling": false,
        "elasticScaleEnabled": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0,
        "zoneRedundant": false
      }
    },
    {
      "type": "microsoft.alertsmanagement/smartdetectoralertrules",
      "apiVersion": "2021-04-01",
      "name": "[parameters('smartdetectoralertrules_failure_anomalies___eventhubrepfunction_name')]",
      "location": "global",
      "dependsOn": [
        "[resourceId('microsoft.insights/components', parameters('components_eventhubrepfunction_name'))]"
      ],
      "properties": {
        "description": "Failure Anomalies notifies you of an unusual rise in the rate of failed HTTP requests or dependency calls.",
        "state": "Enabled",
        "severity": "Sev3",
        "frequency": "PT1M",
        "detector": {
          "id": "FailureAnomaliesDetector"
        },
        "scope": [
          "[resourceId('microsoft.insights/components', parameters('components_eventhubrepfunction_name'))]"
        ],
        "actionGroups": {
          "groupIds": [
            "[parameters('actiongroups_application_insights_smart_detection_externalid')]"
          ]
        }
      }
    },
    {
      "type": "microsoft.alertsmanagement/smartdetectoralertrules",
      "apiVersion": "2021-04-01",
      "name": "[parameters('smartdetectoralertrules_failure_anomalies___eventhubtocosmosdb_name')]",
      "location": "global",
      "dependsOn": [
        "[resourceId('microsoft.insights/components', parameters('components_EventHubToCosmosDB_name'))]"
      ],
      "properties": {
        "description": "Failure Anomalies notifies you of an unusual rise in the rate of failed HTTP requests or dependency calls.",
        "state": "Enabled",
        "severity": "Sev3",
        "frequency": "PT1M",
        "detector": {
          "id": "FailureAnomaliesDetector"
        },
        "scope": [
          "[resourceId('microsoft.insights/components', parameters('components_EventHubToCosmosDB_name'))]"
        ],
        "actionGroups": {
          "groupIds": [
            "[parameters('actiongroups_application_insights_smart_detection_externalid')]"
          ]
        }
      }
    },
    {
      "type": "Microsoft.DataMigration/services/projects",
      "apiVersion": "2021-06-30",
      "name": "[concat(parameters('services_Ford_Data_Migration_name'), '/datatransfer')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.DataMigration/services', parameters('services_Ford_Data_Migration_name'))]"
      ],
      "properties": {
        "sourcePlatform": "MySQL",
        "targetPlatform": "AzureDbForMySQL"
      }
    },
    {
      "type": "Microsoft.DBforMySQL/servers/firewallRules",
      "apiVersion": "2017-12-01",
      "name": "[concat(parameters('servers_aikdo_name'), '/AllowAll_2021-8-10_13-3-46')]",
      "dependsOn": [
        "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_aikdo_name'))]"
      ],
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "255.255.255.255"
      }
    },
    {
      "type": "Microsoft.DBforMySQL/servers/firewallRules",
      "apiVersion": "2017-12-01",
      "name": "[concat(parameters('servers_test_replication_name'), '/AllowAll_2021-8-10_16-42-14')]",
      "dependsOn": [
        "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_test_replication_name'))]"
      ],
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "255.255.255.255"
      }
    },
    {
      "type": "Microsoft.DBforMySQL/servers/firewallRules",
      "apiVersion": "2017-12-01",
      "name": "[concat(parameters('servers_repl_dest_name'), '/AllowAll_2021-8-11_18-9-28')]",
      "dependsOn": [
        "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_repl_dest_name'))]"
      ],
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "255.255.255.255"
      }
    },
    {
      "type": "Microsoft.DBforMySQL/servers/firewallRules",
      "apiVersion": "2017-12-01",
      "name": "[concat(parameters('servers_aikdo_name'), '/AllowAllWindowsAzureIps')]",
      "dependsOn": [
        "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_aikdo_name'))]"
      ],
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "0.0.0.0"
      }
    },
    {
      "type": "Microsoft.DBforMySQL/servers/firewallRules",
      "apiVersion": "2017-12-01",
      "name": "[concat(parameters('servers_repl_dest_name'), '/AllowAllWindowsAzureIps')]",
      "dependsOn": [
        "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_repl_dest_name'))]"
      ],
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "0.0.0.0"
      }
    },
    {
      "type": "Microsoft.DBforMySQL/servers/firewallRules",
      "apiVersion": "2017-12-01",
      "name": "[concat(parameters('servers_test_replication_name'), '/AllowAllWindowsAzureIps')]",
      "dependsOn": [
        "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_test_replication_name'))]"
      ],
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "0.0.0.0"
      }
    },
    {
      "type": "Microsoft.DBforMySQL/servers/firewallRules",
      "apiVersion": "2017-12-01",
      "name": "[concat(parameters('servers_aikdo_name'), '/ClientIPAddress_2021-8-10_12-48-49')]",
      "dependsOn": [
        "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_aikdo_name'))]"
      ],
      "properties": {
        "startIpAddress": "27.5.63.170",
        "endIpAddress": "27.5.63.170"
      }
    },
    {
      "type": "Microsoft.DBforMySQL/servers/firewallRules",
      "apiVersion": "2017-12-01",
      "name": "[concat(parameters('servers_aikdo_name'), '/ClientIPAddress_2021-8-16_0-23-52')]",
      "dependsOn": [
        "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_aikdo_name'))]"
      ],
      "properties": {
        "startIpAddress": "157.51.43.41",
        "endIpAddress": "157.51.43.41"
      }
    },
    {
      "type": "Microsoft.DBforMySQL/servers/firewallRules",
      "apiVersion": "2017-12-01",
      "name": "[concat(parameters('servers_aikdo_name'), '/ipaddress')]",
      "dependsOn": [
        "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_aikdo_name'))]"
      ],
      "properties": {
        "startIpAddress": "192.168.1.2",
        "endIpAddress": "192.168.1.2"
      }
    },
    {
      "type": "Microsoft.DBforMySQL/servers/securityAlertPolicies",
      "apiVersion": "2017-12-01",
      "name": "[concat(parameters('servers_aikdo_name'), '/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.DBforMySQL/servers', parameters('servers_aikdo_name'))]"
      ],
      "properties": {
        "state": "Disabled",
        "disabledAlerts": [""],
        "emailAddresses": [""],
        "emailAccountAdmins": false,
        "retentionDays": 0
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2021-10-15",
      "name": "[concat(parameters('databaseAccounts_aikidocosmoslab_name'), '/fmcTesting')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_aikidocosmoslab_name'))]"
      ],
      "properties": {
        "resource": {
          "id": "fmcTesting"
        }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2021-10-15",
      "name": "[concat(parameters('databaseAccounts_aikidocosmoslab_name'), '/ImportDatabase')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_aikidocosmoslab_name'))]"
      ],
      "properties": {
        "resource": {
          "id": "ImportDatabase"
        }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2021-10-15",
      "name": "[concat(parameters('databaseAccounts_aikidocosmoslab_name'), '/siem')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_aikidocosmoslab_name'))]"
      ],
      "properties": {
        "resource": {
          "id": "siem"
        }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2021-10-15",
      "name": "[concat(parameters('databaseAccounts_aikidocosmoslab_name'), '/teltonikadb')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_aikidocosmoslab_name'))]"
      ],
      "properties": {
        "resource": {
          "id": "teltonikadb"
        }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
      "apiVersion": "2021-10-15",
      "name": "[concat(parameters('databaseAccounts_aikidocosmoslab_name'), '/00000000-0000-0000-0000-000000000001')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_aikidocosmoslab_name'))]"
      ],
      "properties": {
        "roleName": "Cosmos DB Built-in Data Reader",
        "type": 0,
        "assignableScopes": [
          "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_aikidocosmoslab_name'))]"
        ],
        "permissions": [
          {
            "dataActions": [
              "Microsoft.DocumentDB/databaseAccounts/readMetadata",
              "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/executeQuery",
              "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/readChangeFeed",
              "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/read"
            ],
            "notDataActions": []
          }
        ]
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
      "apiVersion": "2021-10-15",
      "name": "[concat(parameters('databaseAccounts_aikidocosmoslab_name'), '/00000000-0000-0000-0000-000000000002')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_aikidocosmoslab_name'))]"
      ],
      "properties": {
        "roleName": "Cosmos DB Built-in Data Contributor",
        "type": 0,
        "assignableScopes": [
          "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_aikidocosmoslab_name'))]"
        ],
        "permissions": [
          {
            "dataActions": [
              "Microsoft.DocumentDB/databaseAccounts/readMetadata",
              "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/*",
              "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/*"
            ],
            "notDataActions": []
          }
        ]
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/AuthorizationRules",
      "apiVersion": "2021-11-01",
      "name": "[concat(parameters('namespaces_replication_test_name'), '/listenaccess')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_replication_test_name'))]"
      ],
      "properties": {
        "rights": ["Listen"]
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/AuthorizationRules",
      "apiVersion": "2021-11-01",
      "name": "[concat(parameters('namespaces_replication_test_name'), '/RootManageSharedAccessKey')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_replication_test_name'))]"
      ],
      "properties": {
        "rights": ["Listen", "Manage", "Send"]
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/AuthorizationRules",
      "apiVersion": "2021-11-01",
      "name": "[concat(parameters('namespaces_replication_test_name'), '/sendaccess')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_replication_test_name'))]"
      ],
      "properties": {
        "rights": ["Send"]
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs",
      "apiVersion": "2021-11-01",
      "name": "[concat(parameters('namespaces_replication_test_name'), '/azure-eh')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_replication_test_name'))]"
      ],
      "properties": {
        "messageRetentionInDays": 1,
        "partitionCount": 2,
        "status": "Active"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs",
      "apiVersion": "2021-11-01",
      "name": "[concat(parameters('namespaces_replication_test_name'), '/azure-eh-nodejs')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_replication_test_name'))]"
      ],
      "properties": {
        "messageRetentionInDays": 1,
        "partitionCount": 2,
        "status": "Active"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs",
      "apiVersion": "2021-11-01",
      "name": "[concat(parameters('namespaces_replication_test_name'), '/iot1')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_replication_test_name'))]"
      ],
      "properties": {
        "messageRetentionInDays": 1,
        "partitionCount": 2,
        "status": "Active"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs",
      "apiVersion": "2021-11-01",
      "name": "[concat(parameters('namespaces_replication_test_name'), '/iot2')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_replication_test_name'))]"
      ],
      "properties": {
        "messageRetentionInDays": 1,
        "partitionCount": 2,
        "status": "Active"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs",
      "apiVersion": "2021-11-01",
      "name": "[concat(parameters('namespaces_replication_test_name'), '/teltonika')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_replication_test_name'))]"
      ],
      "properties": {
        "messageRetentionInDays": 1,
        "partitionCount": 2,
        "status": "Active"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/networkRuleSets",
      "apiVersion": "2021-11-01",
      "name": "[concat(parameters('namespaces_replication_test_name'), '/default')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_replication_test_name'))]"
      ],
      "properties": {
        "publicNetworkAccess": "Enabled",
        "defaultAction": "Allow",
        "virtualNetworkRules": [],
        "ipRules": []
      }
    },
    {
      "type": "microsoft.insights/components/ProactiveDetectionConfigs",
      "apiVersion": "2018-05-01-preview",
      "name": "[concat(parameters('components_eventhubrepfunction_name'), '/degradationindependencyduration')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('microsoft.insights/components', parameters('components_eventhubrepfunction_name'))]"
      ],
      "properties": {
        "ruleDefinitions": {
          "Name": "degradationindependencyduration",
          "DisplayName": "Degradation in dependency duration",
          "Description": "Smart Detection rules notify you of performance anomaly issues.",
          "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
          "IsHidden": false,
          "IsEnabledByDefault": true,
          "IsInPreview": false,
          "SupportsEmailNotifications": true
        },
        "enabled": true,
        "sendEmailsToSubscriptionOwners": true,
        "customEmails": []
      }
    },
    {
      "type": "microsoft.insights/components/ProactiveDetectionConfigs",
      "apiVersion": "2018-05-01-preview",
      "name": "[concat(parameters('components_EventHubToCosmosDB_name'), '/degradationindependencyduration')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('microsoft.insights/components', parameters('components_EventHubToCosmosDB_name'))]"
      ],
      "properties": {
        "ruleDefinitions": {
          "Name": "degradationindependencyduration",
          "DisplayName": "Degradation in dependency duration",
          "Description": "Smart Detection rules notify you of performance anomaly issues.",
          "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
          "IsHidden": false,
          "IsEnabledByDefault": true,
          "IsInPreview": false,
          "SupportsEmailNotifications": true
        },
        "enabled": true,
        "sendEmailsToSubscriptionOwners": true,
        "customEmails": []
      }
    },
    {
      "type": "microsoft.insights/components/ProactiveDetectionConfigs",
      "apiVersion": "2018-05-01-preview",
      "name": "[concat(parameters('components_eventhubrepfunction_name'), '/degradationinserverresponsetime')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('microsoft.insights/components', parameters('components_eventhubrepfunction_name'))]"
      ],
      "properties": {
        "ruleDefinitions": {
          "Name": "degradationinserverresponsetime",
          "DisplayName": "Degradation in server response time",
          "Description": "Smart Detection rules notify you of performance anomaly issues.",
          "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
          "IsHidden": false,
          "IsEnabledByDefault": true,
          "IsInPreview": false,
          "SupportsEmailNotifications": true
        },
        "enabled": true,
        "sendEmailsToSubscriptionOwners": true,
        "customEmails": []
      }
    },
    {
      "type": "microsoft.insights/components/ProactiveDetectionConfigs",
      "apiVersion": "2018-05-01-preview",
      "name": "[concat(parameters('components_EventHubToCosmosDB_name'), '/degradationinserverresponsetime')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('microsoft.insights/components', parameters('components_EventHubToCosmosDB_name'))]"
      ],
      "properties": {
        "ruleDefinitions": {
          "Name": "degradationinserverresponsetime",
          "DisplayName": "Degradation in server response time",
          "Description": "Smart Detection rules notify you of performance anomaly issues.",
          "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
          "IsHidden": false,
          "IsEnabledByDefault": true,
          "IsInPreview": false,
          "SupportsEmailNotifications": true
        },
        "enabled": true,
        "sendEmailsToSubscriptionOwners": true,
        "customEmails": []
      }
    },
    {
      "type": "microsoft.insights/components/ProactiveDetectionConfigs",
      "apiVersion": "2018-05-01-preview",
      "name": "[concat(parameters('components_eventhubrepfunction_name'), '/digestMailConfiguration')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('microsoft.insights/components', parameters('components_eventhubrepfunction_name'))]"
      ],
      "properties": {
        "ruleDefinitions": {
          "Name": "digestMailConfiguration",
          "DisplayName": "Digest Mail Configuration",
          "Description": "This rule describes the digest mail preferences",
          "HelpUrl": "www.homail.com",
          "IsHidden": true,
          "IsEnabledByDefault": true,
          "IsInPreview": false,
          "SupportsEmailNotifications": true
        },
        "enabled": true,
        "sendEmailsToSubscriptionOwners": true,
        "customEmails": []
      }
    },
    {
      "type": "microsoft.insights/components/ProactiveDetectionConfigs",
      "apiVersion": "2018-05-01-preview",
      "name": "[concat(parameters('components_EventHubToCosmosDB_name'), '/digestMailConfiguration')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('microsoft.insights/components', parameters('components_EventHubToCosmosDB_name'))]"
      ],
      "properties": {
        "ruleDefinitions": {
          "Name": "digestMailConfiguration",
          "DisplayName": "Digest Mail Configuration",
          "Description": "This rule describes the digest mail preferences",
          "HelpUrl": "www.homail.com",
          "IsHidden": true,
          "IsEnabledByDefault": true,
          "IsInPreview": false,
          "SupportsEmailNotifications": true
        },
        "enabled": true,
        "sendEmailsToSubscriptionOwners": true,
        "customEmails": []
      }
    },
    {
      "type": "microsoft.insights/components/ProactiveDetectionConfigs",
      "apiVersion": "2018-05-01-preview",
      "name": "[concat(parameters('components_eventhubrepfunction_name'), '/extension_billingdatavolumedailyspikeextension')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('microsoft.insights/components', parameters('components_eventhubrepfunction_name'))]"
      ],
      "properties": {
        "ruleDefinitions": {
          "Name": "extension_billingdatavolumedailyspikeextension",
          "DisplayName": "Abnormal rise in daily data volume (preview)",
          "Description": "This detection rule automatically analyzes the billing data generated by your application, and can warn you about an unusual increase in your application's billing costs",
          "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/tree/master/SmartDetection/billing-data-volume-daily-spike.md",
          "IsHidden": false,
          "IsEnabledByDefault": true,
          "IsInPreview": true,
          "SupportsEmailNotifications": false
        },
        "enabled": true,
        "sendEmailsToSubscriptionOwners": true,
        "customEmails": []
      }
    },
    {
      "type": "microsoft.insights/components/ProactiveDetectionConfigs",
      "apiVersion": "2018-05-01-preview",
      "name": "[concat(parameters('components_EventHubToCosmosDB_name'), '/extension_billingdatavolumedailyspikeextension')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('microsoft.insights/components', parameters('components_EventHubToCosmosDB_name'))]"
      ],
      "properties": {
        "ruleDefinitions": {
          "Name": "extension_billingdatavolumedailyspikeextension",
          "DisplayName": "Abnormal rise in daily data volume (preview)",
          "Description": "This detection rule automatically analyzes the billing data generated by your application, and can warn you about an unusual increase in your application's billing costs",
          "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/tree/master/SmartDetection/billing-data-volume-daily-spike.md",
          "IsHidden": false,
          "IsEnabledByDefault": true,
          "IsInPreview": true,
          "SupportsEmailNotifications": false
        },
        "enabled": true,
        "sendEmailsToSubscriptionOwners": true,
        "customEmails": []
      }
    },
    {
      "type": "microsoft.insights/components/ProactiveDetectionConfigs",
      "apiVersion": "2018-05-01-preview",
      "name": "[concat(parameters('components_eventhubrepfunction_name'), '/extension_canaryextension')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('microsoft.insights/components', parameters('components_eventhubrepfunction_name'))]"
      ],
      "properties": {
        "ruleDefinitions": {
          "Name": "extension_canaryextension",
          "DisplayName": "Canary extension",
          "Description": "Canary extension",
          "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/",
          "IsHidden": true,
          "IsEnabledByDefault": true,
          "IsInPreview": true,
          "SupportsEmailNotifications": false
        },
        "enabled": true,
        "sendEmailsToSubscriptionOwners": true,
        "customEmails": []
      }
    },
    {
      "type": "microsoft.insights/components/ProactiveDetectionConfigs",
      "apiVersion": "2018-05-01-preview",
      "name": "[concat(parameters('components_EventHubToCosmosDB_name'), '/extension_canaryextension')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('microsoft.insights/components', parameters('components_EventHubToCosmosDB_name'))]"
      ],
      "properties": {
        "ruleDefinitions": {
          "Name": "extension_canaryextension",
          "DisplayName": "Canary extension",
          "Description": "Canary extension",
          "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/",
          "IsHidden": true,
          "IsEnabledByDefault": true,
          "IsInPreview": true,
          "SupportsEmailNotifications": false
        },
        "enabled": true,
        "sendEmailsToSubscriptionOwners": true,
        "customEmails": []
      }
    },
    {
      "type": "microsoft.insights/components/ProactiveDetectionConfigs",
      "apiVersion": "2018-05-01-preview",
      "name": "[concat(parameters('components_eventhubrepfunction_name'), '/extension_exceptionchangeextension')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('microsoft.insights/components', parameters('components_eventhubrepfunction_name'))]"
      ],
      "properties": {
        "ruleDefinitions": {
          "Name": "extension_exceptionchangeextension",
          "DisplayName": "Abnormal rise in exception volume (preview)",
          "Description": "This detection rule automatically analyzes the exceptions thrown in your application, and can warn you about unusual patterns in your exception telemetry.",
          "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/abnormal-rise-in-exception-volume.md",
          "IsHidden": false,
          "IsEnabledByDefault": true,
          "IsInPreview": true,
          "SupportsEmailNotifications": false
        },
        "enabled": true,
        "sendEmailsToSubscriptionOwners": true,
        "customEmails": []
      }
    },
    {
      "type": "microsoft.insights/components/ProactiveDetectionConfigs",
      "apiVersion": "2018-05-01-preview",
      "name": "[concat(parameters('components_EventHubToCosmosDB_name'), '/extension_exceptionchangeextension')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('microsoft.insights/components', parameters('components_EventHubToCosmosDB_name'))]"
      ],
      "properties": {
        "ruleDefinitions": {
          "Name": "extension_exceptionchangeextension",
          "DisplayName": "Abnormal rise in exception volume (preview)",
          "Description": "This detection rule automatically analyzes the exceptions thrown in your application, and can warn you about unusual patterns in your exception telemetry.",
          "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/abnormal-rise-in-exception-volume.md",
          "IsHidden": false,
          "IsEnabledByDefault": true,
          "IsInPreview": true,
          "SupportsEmailNotifications": false
        },
        "enabled": true,
        "sendEmailsToSubscriptionOwners": true,
        "customEmails": []
      }
    },
    {
      "type": "microsoft.insights/components/ProactiveDetectionConfigs",
      "apiVersion": "2018-05-01-preview",
      "name": "[concat(parameters('components_eventhubrepfunction_name'), '/extension_memoryleakextension')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('microsoft.insights/components', parameters('components_eventhubrepfunction_name'))]"
      ],
      "properties": {
        "ruleDefinitions": {
          "Name": "extension_memoryleakextension",
          "DisplayName": "Potential memory leak detected (preview)",
          "Description": "This detection rule automatically analyzes the memory consumption of each process in your application, and can warn you about potential memory leaks or increased memory consumption.",
          "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/tree/master/SmartDetection/memory-leak.md",
          "IsHidden": false,
          "IsEnabledByDefault": true,
          "IsInPreview": true,
          "SupportsEmailNotifications": false
        },
        "enabled": true,
        "sendEmailsToSubscriptionOwners": true,
        "customEmails": []
      }
    },
    {
      "type": "microsoft.insights/components/ProactiveDetectionConfigs",
      "apiVersion": "2018-05-01-preview",
      "name": "[concat(parameters('components_EventHubToCosmosDB_name'), '/extension_memoryleakextension')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('microsoft.insights/components', parameters('components_EventHubToCosmosDB_name'))]"
      ],
      "properties": {
        "ruleDefinitions": {
          "Name": "extension_memoryleakextension",
          "DisplayName": "Potential memory leak detected (preview)",
          "Description": "This detection rule automatically analyzes the memory consumption of each process in your application, and can warn you about potential memory leaks or increased memory consumption.",
          "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/tree/master/SmartDetection/memory-leak.md",
          "IsHidden": false,
          "IsEnabledByDefault": true,
          "IsInPreview": true,
          "SupportsEmailNotifications": false
        },
        "enabled": true,
        "sendEmailsToSubscriptionOwners": true,
        "customEmails": []
      }
    },
    {
      "type": "microsoft.insights/components/ProactiveDetectionConfigs",
      "apiVersion": "2018-05-01-preview",
      "name": "[concat(parameters('components_eventhubrepfunction_name'), '/extension_securityextensionspackage')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('microsoft.insights/components', parameters('components_eventhubrepfunction_name'))]"
      ],
      "properties": {
        "ruleDefinitions": {
          "Name": "extension_securityextensionspackage",
          "DisplayName": "Potential security issue detected (preview)",
          "Description": "This detection rule automatically analyzes the telemetry generated by your application and detects potential security issues.",
          "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/application-security-detection-pack.md",
          "IsHidden": false,
          "IsEnabledByDefault": true,
          "IsInPreview": true,
          "SupportsEmailNotifications": false
        },
        "enabled": true,
        "sendEmailsToSubscriptionOwners": true,
        "customEmails": []
      }
    },
    {
      "type": "microsoft.insights/components/ProactiveDetectionConfigs",
      "apiVersion": "2018-05-01-preview",
      "name": "[concat(parameters('components_EventHubToCosmosDB_name'), '/extension_securityextensionspackage')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('microsoft.insights/components', parameters('components_EventHubToCosmosDB_name'))]"
      ],
      "properties": {
        "ruleDefinitions": {
          "Name": "extension_securityextensionspackage",
          "DisplayName": "Potential security issue detected (preview)",
          "Description": "This detection rule automatically analyzes the telemetry generated by your application and detects potential security issues.",
          "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/application-security-detection-pack.md",
          "IsHidden": false,
          "IsEnabledByDefault": true,
          "IsInPreview": true,
          "SupportsEmailNotifications": false
        },
        "enabled": true,
        "sendEmailsToSubscriptionOwners": true,
        "customEmails": []
      }
    },
    {
      "type": "microsoft.insights/components/ProactiveDetectionConfigs",
      "apiVersion": "2018-05-01-preview",
      "name": "[concat(parameters('components_eventhubrepfunction_name'), '/extension_traceseveritydetector')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('microsoft.insights/components', parameters('components_eventhubrepfunction_name'))]"
      ],
      "properties": {
        "ruleDefinitions": {
          "Name": "extension_traceseveritydetector",
          "DisplayName": "Degradation in trace severity ratio (preview)",
          "Description": "This detection rule automatically analyzes the trace logs emitted from your application, and can warn you about unusual patterns in the severity of your trace telemetry.",
          "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/degradation-in-trace-severity-ratio.md",
          "IsHidden": false,
          "IsEnabledByDefault": true,
          "IsInPreview": true,
          "SupportsEmailNotifications": false
        },
        "enabled": true,
        "sendEmailsToSubscriptionOwners": true,
        "customEmails": []
      }
    },
    {
      "type": "microsoft.insights/components/ProactiveDetectionConfigs",
      "apiVersion": "2018-05-01-preview",
      "name": "[concat(parameters('components_EventHubToCosmosDB_name'), '/extension_traceseveritydetector')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('microsoft.insights/components', parameters('components_EventHubToCosmosDB_name'))]"
      ],
      "properties": {
        "ruleDefinitions": {
          "Name": "extension_traceseveritydetector",
          "DisplayName": "Degradation in trace severity ratio (preview)",
          "Description": "This detection rule automatically analyzes the trace logs emitted from your application, and can warn you about unusual patterns in the severity of your trace telemetry.",
          "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/degradation-in-trace-severity-ratio.md",
          "IsHidden": false,
          "IsEnabledByDefault": true,
          "IsInPreview": true,
          "SupportsEmailNotifications": false
        },
        "enabled": true,
        "sendEmailsToSubscriptionOwners": true,
        "customEmails": []
      }
    },
    {
      "type": "microsoft.insights/components/ProactiveDetectionConfigs",
      "apiVersion": "2018-05-01-preview",
      "name": "[concat(parameters('components_eventhubrepfunction_name'), '/longdependencyduration')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('microsoft.insights/components', parameters('components_eventhubrepfunction_name'))]"
      ],
      "properties": {
        "ruleDefinitions": {
          "Name": "longdependencyduration",
          "DisplayName": "Long dependency duration",
          "Description": "Smart Detection rules notify you of performance anomaly issues.",
          "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
          "IsHidden": false,
          "IsEnabledByDefault": true,
          "IsInPreview": false,
          "SupportsEmailNotifications": true
        },
        "enabled": true,
        "sendEmailsToSubscriptionOwners": true,
        "customEmails": []
      }
    },
    {
      "type": "microsoft.insights/components/ProactiveDetectionConfigs",
      "apiVersion": "2018-05-01-preview",
      "name": "[concat(parameters('components_EventHubToCosmosDB_name'), '/longdependencyduration')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('microsoft.insights/components', parameters('components_EventHubToCosmosDB_name'))]"
      ],
      "properties": {
        "ruleDefinitions": {
          "Name": "longdependencyduration",
          "DisplayName": "Long dependency duration",
          "Description": "Smart Detection rules notify you of performance anomaly issues.",
          "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
          "IsHidden": false,
          "IsEnabledByDefault": true,
          "IsInPreview": false,
          "SupportsEmailNotifications": true
        },
        "enabled": true,
        "sendEmailsToSubscriptionOwners": true,
        "customEmails": []
      }
    },
    {
      "type": "microsoft.insights/components/ProactiveDetectionConfigs",
      "apiVersion": "2018-05-01-preview",
      "name": "[concat(parameters('components_eventhubrepfunction_name'), '/migrationToAlertRulesCompleted')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('microsoft.insights/components', parameters('components_eventhubrepfunction_name'))]"
      ],
      "properties": {
        "ruleDefinitions": {
          "Name": "migrationToAlertRulesCompleted",
          "DisplayName": "Migration To Alert Rules Completed",
          "Description": "A configuration that controls the migration state of Smart Detection to Smart Alerts",
          "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
          "IsHidden": true,
          "IsEnabledByDefault": false,
          "IsInPreview": true,
          "SupportsEmailNotifications": false
        },
        "enabled": false,
        "sendEmailsToSubscriptionOwners": true,
        "customEmails": []
      }
    },
    {
      "type": "microsoft.insights/components/ProactiveDetectionConfigs",
      "apiVersion": "2018-05-01-preview",
      "name": "[concat(parameters('components_EventHubToCosmosDB_name'), '/migrationToAlertRulesCompleted')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('microsoft.insights/components', parameters('components_EventHubToCosmosDB_name'))]"
      ],
      "properties": {
        "ruleDefinitions": {
          "Name": "migrationToAlertRulesCompleted",
          "DisplayName": "Migration To Alert Rules Completed",
          "Description": "A configuration that controls the migration state of Smart Detection to Smart Alerts",
          "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
          "IsHidden": true,
          "IsEnabledByDefault": false,
          "IsInPreview": true,
          "SupportsEmailNotifications": false
        },
        "enabled": false,
        "sendEmailsToSubscriptionOwners": true,
        "customEmails": []
      }
    },
    {
      "type": "microsoft.insights/components/ProactiveDetectionConfigs",
      "apiVersion": "2018-05-01-preview",
      "name": "[concat(parameters('components_eventhubrepfunction_name'), '/slowpageloadtime')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('microsoft.insights/components', parameters('components_eventhubrepfunction_name'))]"
      ],
      "properties": {
        "ruleDefinitions": {
          "Name": "slowpageloadtime",
          "DisplayName": "Slow page load time",
          "Description": "Smart Detection rules notify you of performance anomaly issues.",
          "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
          "IsHidden": false,
          "IsEnabledByDefault": true,
          "IsInPreview": false,
          "SupportsEmailNotifications": true
        },
        "enabled": true,
        "sendEmailsToSubscriptionOwners": true,
        "customEmails": []
      }
    },
    {
      "type": "microsoft.insights/components/ProactiveDetectionConfigs",
      "apiVersion": "2018-05-01-preview",
      "name": "[concat(parameters('components_EventHubToCosmosDB_name'), '/slowpageloadtime')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('microsoft.insights/components', parameters('components_EventHubToCosmosDB_name'))]"
      ],
      "properties": {
        "ruleDefinitions": {
          "Name": "slowpageloadtime",
          "DisplayName": "Slow page load time",
          "Description": "Smart Detection rules notify you of performance anomaly issues.",
          "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
          "IsHidden": false,
          "IsEnabledByDefault": true,
          "IsInPreview": false,
          "SupportsEmailNotifications": true
        },
        "enabled": true,
        "sendEmailsToSubscriptionOwners": true,
        "customEmails": []
      }
    },
    {
      "type": "microsoft.insights/components/ProactiveDetectionConfigs",
      "apiVersion": "2018-05-01-preview",
      "name": "[concat(parameters('components_eventhubrepfunction_name'), '/slowserverresponsetime')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('microsoft.insights/components', parameters('components_eventhubrepfunction_name'))]"
      ],
      "properties": {
        "ruleDefinitions": {
          "Name": "slowserverresponsetime",
          "DisplayName": "Slow server response time",
          "Description": "Smart Detection rules notify you of performance anomaly issues.",
          "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
          "IsHidden": false,
          "IsEnabledByDefault": true,
          "IsInPreview": false,
          "SupportsEmailNotifications": true
        },
        "enabled": true,
        "sendEmailsToSubscriptionOwners": true,
        "customEmails": []
      }
    },
    {
      "type": "microsoft.insights/components/ProactiveDetectionConfigs",
      "apiVersion": "2018-05-01-preview",
      "name": "[concat(parameters('components_EventHubToCosmosDB_name'), '/slowserverresponsetime')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('microsoft.insights/components', parameters('components_EventHubToCosmosDB_name'))]"
      ],
      "properties": {
        "ruleDefinitions": {
          "Name": "slowserverresponsetime",
          "DisplayName": "Slow server response time",
          "Description": "Smart Detection rules notify you of performance anomaly issues.",
          "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
          "IsHidden": false,
          "IsEnabledByDefault": true,
          "IsInPreview": false,
          "SupportsEmailNotifications": true
        },
        "enabled": true,
        "sendEmailsToSubscriptionOwners": true,
        "customEmails": []
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "[parameters('networkInterfaces_NIC_hpdrk254599xz78qa6gchuvc_name')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_ford_demo_vnet_name'), 'ford-demo-subnet')]"
      ],
      "tags": {
        "ServiceResourceId": "/subscriptions/3387f4fe-efd5-44e2-a4a2-4581ab04bf99/resourceGroups/Azure_GCP_Migration/providers/Microsoft.DataMigration/services/Ford-Data-Migration"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAddress": "172.16.0.5",
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_ford_demo_vnet_name'), 'ford-demo-subnet')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": false
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_db2winazurensg855_name'), '/allow_all')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_db2winazurensg855_name'))]"
      ],
      "properties": {
        "protocol": "*",
        "sourcePortRange": "*",
        "destinationPortRange": "*",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 380,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_db2vm_nsg_name'), '/HTTP')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_db2vm_nsg_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "80",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 360,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_db2_win_azure_nsg_name'), '/HTTP')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_db2_win_azure_nsg_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "80",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 360,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_db2winazurensg855_name'), '/HTTP')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_db2winazurensg855_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "80",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 360,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_kafka_azure_nsg_name'), '/HTTP')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_kafka_azure_nsg_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "80",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 320,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_db2vm_nsg_name'), '/HTTPS')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_db2vm_nsg_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "443",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 340,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_db2_win_azure_nsg_name'), '/HTTPS')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_db2_win_azure_nsg_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "443",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 340,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_db2winazurensg855_name'), '/HTTPS')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_db2winazurensg855_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "443",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 340,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_kafka_azure_nsg_name'), '/HTTPS')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_kafka_azure_nsg_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "443",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 340,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_aikido_1_nsg_name'), '/MySQL_IP_8080')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_aikido_1_nsg_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "3306",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 310,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_aikido_1_nsg_name'), '/MySQL_OP_8080')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_aikido_1_nsg_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "3306",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 100,
        "direction": "Outbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_Aikido_2_nsg_name'), '/Port_8080')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Aikido_2_nsg_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "3306",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 310,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_db2vm_nsg_name'), '/Port_8080')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_db2vm_nsg_name'))]"
      ],
      "properties": {
        "protocol": "*",
        "sourcePortRange": "*",
        "destinationPortRange": "*",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 370,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_db2winazurensg855_name'), '/Port_8080')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_db2winazurensg855_name'))]"
      ],
      "properties": {
        "description": "allow all",
        "protocol": "*",
        "sourcePortRange": "*",
        "destinationPortRange": "*",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 370,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_kafka_azure_nsg_name'), '/Port_8080')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_kafka_azure_nsg_name'))]"
      ],
      "properties": {
        "protocol": "*",
        "sourcePortRange": "*",
        "destinationPortRange": "*",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 370,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_Aikido_2_nsg_name'), '/Port_8081')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Aikido_2_nsg_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "3306",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 100,
        "direction": "Outbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_kafka_azure_nsg_name'), '/Port_asterix')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_kafka_azure_nsg_name'))]"
      ],
      "properties": {
        "protocol": "*",
        "sourcePortRange": "*",
        "destinationPortRange": "*",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 100,
        "direction": "Outbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_aikido_1_nsg_name'), '/RDP')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_aikido_1_nsg_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "3389",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 300,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_Aikido_2_nsg_name'), '/RDP')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Aikido_2_nsg_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "3389",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 300,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_Aikido_ford_nsg_name'), '/RDP')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Aikido_ford_nsg_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "3389",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 300,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_db2vm_nsg_name'), '/RDP')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_db2vm_nsg_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "3389",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 320,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_db2_win_azure_nsg_name'), '/RDP')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_db2_win_azure_nsg_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "3389",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 300,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_db2winazurensg855_name'), '/RDP')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_db2winazurensg855_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "3389",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 300,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_kafka_azure_nsg_name'), '/RDP')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_kafka_azure_nsg_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "3389",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 360,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_db2vm_nsg_name'), '/SSH')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_db2vm_nsg_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "22",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 300,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_db2_win_azure_nsg_name'), '/SSH')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_db2_win_azure_nsg_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "22",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 320,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_db2winazurensg855_name'), '/SSH')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_db2winazurensg855_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "22",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 320,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_ford_demo_nsg_name'), '/SSH')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_ford_demo_nsg_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "22",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 300,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_kafka_azure_nsg_name'), '/SSH')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_kafka_azure_nsg_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "22",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 300,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('virtualNetworks_Azure_GCP_Migration_vnet_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Azure_GCP_Migration_vnet_name'))]"
      ],
      "properties": {
        "addressPrefix": "10.0.0.0/24",
        "delegations": [],
        "privateEndpointNetworkPolicies": "Enabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('virtualNetworks_Azure_GCP_Migrationvnet144_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Azure_GCP_Migrationvnet144_name'))]"
      ],
      "properties": {
        "addressPrefix": "10.1.0.0/24",
        "delegations": [],
        "privateEndpointNetworkPolicies": "Enabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('virtualNetworks_Azure_GCP_Migrationvnet955_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Azure_GCP_Migrationvnet955_name'))]"
      ],
      "properties": {
        "addressPrefix": "10.2.0.0/24",
        "delegations": [],
        "privateEndpointNetworkPolicies": "Enabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('virtualNetworks_eventhubrep_vNet2888792_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_eventhubrep_vNet2888792_name'))]"
      ],
      "properties": {
        "addressPrefix": "10.3.0.0/24",
        "serviceEndpoints": [
          {
            "service": "Microsoft.Storage",
            "locations": ["[variables('location')]", "westus"]
          }
        ],
        "delegations": [],
        "privateEndpointNetworkPolicies": "Enabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('virtualNetworks_evthub2_vNet5886669_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_evthub2_vNet5886669_name'))]"
      ],
      "properties": {
        "addressPrefix": "10.4.0.0/24",
        "serviceEndpoints": [
          {
            "service": "Microsoft.Storage",
            "locations": ["[variables('location')]", "westus"]
          }
        ],
        "delegations": [],
        "privateEndpointNetworkPolicies": "Enabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('virtualNetworks_ford_demo_vnet_name'), '/ford-demo-subnet')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_ford_demo_vnet_name'))]"
      ],
      "properties": {
        "addressPrefix": "172.16.0.0/24",
        "delegations": [],
        "privateEndpointNetworkPolicies": "Enabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('virtualNetworks_ford_demo_vnet_name'), '/GatewaySubnet')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_ford_demo_vnet_name'))]"
      ],
      "properties": {
        "addressPrefix": "172.16.1.0/24",
        "serviceEndpoints": [],
        "delegations": [],
        "privateEndpointNetworkPolicies": "Enabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_eventhubrepfunction_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_eventhubrepfunction_name'))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_evthub_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_evthub_name'))]"
      ],
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        },
        "containerDeleteRetentionPolicy": {
          "enabled": true,
          "days": 7
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_evthubnodejs_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_evthubnodejs_name'))]"
      ],
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": true,
          "days": 7
        },
        "isVersioningEnabled": false,
        "changeFeed": {
          "enabled": false
        },
        "restorePolicy": {
          "enabled": false
        },
        "containerDeleteRetentionPolicy": {
          "enabled": true,
          "days": 7
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_sqlvamqrcrrkf6bowu_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_sqlvamqrcrrkf6bowu_name'))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_teltonikafmc003_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_teltonikafmc003_name'))]"
      ],
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "properties": {
        "containerDeleteRetentionPolicy": {
          "enabled": true,
          "days": 7
        },
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": true,
          "days": 7
        },
        "isVersioningEnabled": true
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_eventhubrepfunction_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_eventhubrepfunction_name'))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "protocolSettings": {
          "smb": {}
        },
        "cors": {
          "corsRules": []
        },
        "shareDeleteRetentionPolicy": {
          "enabled": true,
          "days": 7
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_evthub_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_evthub_name'))]"
      ],
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "properties": {
        "protocolSettings": {
          "smb": {}
        },
        "cors": {
          "corsRules": []
        },
        "shareDeleteRetentionPolicy": {
          "enabled": true,
          "days": 7
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_evthubnodejs_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_evthubnodejs_name'))]"
      ],
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "properties": {
        "protocolSettings": {
          "smb": {}
        },
        "cors": {
          "corsRules": []
        },
        "shareDeleteRetentionPolicy": {
          "enabled": true,
          "days": 7
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_sqlvamqrcrrkf6bowu_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_sqlvamqrcrrkf6bowu_name'))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "protocolSettings": {
          "smb": {}
        },
        "cors": {
          "corsRules": []
        },
        "shareDeleteRetentionPolicy": {
          "enabled": true,
          "days": 7
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_teltonikafmc003_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_teltonikafmc003_name'))]"
      ],
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "properties": {
        "protocolSettings": {
          "smb": {}
        },
        "cors": {
          "corsRules": []
        },
        "shareDeleteRetentionPolicy": {
          "enabled": true,
          "days": 7
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_eventhubrepfunction_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_eventhubrepfunction_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_evthub_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_evthub_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_evthubnodejs_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_evthubnodejs_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_sqlvamqrcrrkf6bowu_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_sqlvamqrcrrkf6bowu_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_teltonikafmc003_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_teltonikafmc003_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_eventhubrepfunction_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_eventhubrepfunction_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_evthub_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_evthub_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_evthubnodejs_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_evthubnodejs_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_sqlvamqrcrrkf6bowu_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_sqlvamqrcrrkf6bowu_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_teltonikafmc003_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_teltonikafmc003_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[parameters('sites_EventHubRepFunction_name')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_EventHubRepFunction_0373_name'))]"
      ],
      "kind": "functionapp",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "eventhubrepfunction.azurewebsites.net",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "eventhubrepfunction.scm.azurewebsites.net",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_EventHubRepFunction_0373_name'))]",
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "siteConfig": {
          "numberOfWorkers": 1,
          "acrUseManagedIdentityCreds": false,
          "alwaysOn": false,
          "http20Enabled": false,
          "functionAppScaleLimit": 200,
          "minimumElasticInstanceCount": 0
        },
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "clientCertMode": "Required",
        "hostNamesDisabled": false,
        "customDomainVerificationId": "2B8DF38E1B9AB2C0C4CC3671DBF3F4A6F9237A731DB4BDDC537FC7EC89B032E5",
        "containerSize": 1536,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "redundancyMode": "None",
        "storageAccountRequired": false,
        "keyVaultReferenceIdentity": "SystemAssigned"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[parameters('sites_teltonikapoc_name')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_AzureGCPMigration_bfb5_name'))]"
      ],
      "kind": "functionapp",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(parameters('sites_teltonikapoc_name'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(parameters('sites_teltonikapoc_name'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_AzureGCPMigration_bfb5_name'))]",
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "siteConfig": {
          "numberOfWorkers": 1,
          "acrUseManagedIdentityCreds": false,
          "alwaysOn": false,
          "http20Enabled": false,
          "functionAppScaleLimit": 200,
          "minimumElasticInstanceCount": 1
        },
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "clientCertMode": "Required",
        "hostNamesDisabled": false,
        "customDomainVerificationId": "2B8DF38E1B9AB2C0C4CC3671DBF3F4A6F9237A731DB4BDDC537FC7EC89B032E5",
        "containerSize": 1536,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "redundancyMode": "None",
        "storageAccountRequired": false,
        "keyVaultReferenceIdentity": "SystemAssigned"
      }
    },
    {
      "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
      "apiVersion": "2021-02-01",
      "name": "[concat(parameters('sites_EventHubRepFunction_name'), '/ftp')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('sites_EventHubRepFunction_name'))]"
      ],
      "properties": {
        "allow": true
      }
    },
    {
      "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
      "apiVersion": "2021-02-01",
      "name": "[concat(parameters('sites_teltonikapoc_name'), '/ftp')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('sites_teltonikapoc_name'))]"
      ],
      "properties": {
        "allow": true
      }
    },
    {
      "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
      "apiVersion": "2021-02-01",
      "name": "[concat(parameters('sites_EventHubRepFunction_name'), '/scm')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('sites_EventHubRepFunction_name'))]"
      ],
      "properties": {
        "allow": true
      }
    },
    {
      "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
      "apiVersion": "2021-02-01",
      "name": "[concat(parameters('sites_teltonikapoc_name'), '/scm')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('sites_teltonikapoc_name'))]"
      ],
      "properties": {
        "allow": true
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2021-02-01",
      "name": "[concat(parameters('sites_EventHubRepFunction_name'), '/web')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('sites_EventHubRepFunction_name'))]"
      ],
      "properties": {
        "numberOfWorkers": 1,
        "defaultDocuments": [
          "Default.htm",
          "Default.html",
          "Default.asp",
          "index.htm",
          "index.html",
          "iisstart.htm",
          "default.aspx",
          "index.php"
        ],
        "netFrameworkVersion": "v4.0",
        "phpVersion": "5.6",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "httpLoggingEnabled": false,
        "acrUseManagedIdentityCreds": false,
        "logsDirectorySizeLimit": 35,
        "detailedErrorLoggingEnabled": false,
        "publishingUsername": "$EventHubRepFunction",
        "scmType": "None",
        "use32BitWorkerProcess": true,
        "webSocketsEnabled": false,
        "alwaysOn": false,
        "managedPipelineMode": "Integrated",
        "virtualApplications": [
          {
            "virtualPath": "/",
            "physicalPath": "site\\wwwroot",
            "preloadEnabled": false
          }
        ],
        "loadBalancing": "LeastRequests",
        "experiments": {
          "rampUpRules": []
        },
        "autoHealEnabled": false,
        "vnetRouteAllEnabled": false,
        "vnetPrivatePortsCount": 0,
        "localMySqlEnabled": false,
        "ipSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictionsUseMain": false,
        "http20Enabled": false,
        "minTlsVersion": "1.2",
        "scmMinTlsVersion": "1.0",
        "ftpsState": "AllAllowed",
        "preWarmedInstanceCount": 0,
        "functionAppScaleLimit": 200,
        "functionsRuntimeScaleMonitoringEnabled": false,
        "minimumElasticInstanceCount": 0,
        "azureStorageAccounts": {}
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2021-02-01",
      "name": "[concat(parameters('sites_teltonikapoc_name'), '/web')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('sites_teltonikapoc_name'))]"
      ],
      "properties": {
        "numberOfWorkers": 1,
        "defaultDocuments": [
          "Default.htm",
          "Default.html",
          "Default.asp",
          "index.htm",
          "index.html",
          "iisstart.htm",
          "default.aspx",
          "index.php"
        ],
        "netFrameworkVersion": "v4.0",
        "phpVersion": "5.6",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "remoteDebuggingVersion": "VS2019",
        "httpLoggingEnabled": false,
        "acrUseManagedIdentityCreds": false,
        "logsDirectorySizeLimit": 35,
        "detailedErrorLoggingEnabled": false,
        "publishingUsername": "$teltonikapoc",
        "scmType": "None",
        "use32BitWorkerProcess": true,
        "webSocketsEnabled": false,
        "alwaysOn": false,
        "managedPipelineMode": "Integrated",
        "virtualApplications": [
          {
            "virtualPath": "/",
            "physicalPath": "site\\wwwroot",
            "preloadEnabled": false
          }
        ],
        "loadBalancing": "LeastRequests",
        "experiments": {
          "rampUpRules": []
        },
        "autoHealEnabled": false,
        "vnetRouteAllEnabled": false,
        "vnetPrivatePortsCount": 0,
        "localMySqlEnabled": false,
        "ipSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictionsUseMain": false,
        "http20Enabled": false,
        "minTlsVersion": "1.2",
        "scmMinTlsVersion": "1.0",
        "ftpsState": "AllAllowed",
        "preWarmedInstanceCount": 0,
        "functionAppScaleLimit": 200,
        "functionsRuntimeScaleMonitoringEnabled": false,
        "minimumElasticInstanceCount": 1,
        "azureStorageAccounts": {}
      }
    },
    {
      "type": "Microsoft.Web/sites/deployments",
      "apiVersion": "2021-02-01",
      "name": "[concat(parameters('sites_EventHubRepFunction_name'), '/392806624e8246389dce276d33a290c7')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('sites_EventHubRepFunction_name'))]"
      ],
      "properties": {
        "status": 4,
        "author_email": "N/A",
        "author": "VS Code",
        "deployer": "ZipDeploy",
        "message": "Created via a push deployment",
        "start_time": "2021-09-03T12:49:19.7785091Z",
        "end_time": "2021-09-03T12:49:24.0753839Z",
        "active": true
      }
    },
    {
      "type": "Microsoft.Web/sites/functions",
      "apiVersion": "2021-02-01",
      "name": "[concat(parameters('sites_EventHubRepFunction_name'), '/EventHubTrigger1')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('sites_EventHubRepFunction_name'))]"
      ],
      "properties": {
        "script_root_path_href": "https://eventhubrepfunction.azurewebsites.net/admin/vfs/site/wwwroot/EventHubTrigger1/",
        "script_href": "https://eventhubrepfunction.azurewebsites.net/admin/vfs/site/wwwroot/EventHubTrigger1/index.js",
        "config_href": "https://eventhubrepfunction.azurewebsites.net/admin/vfs/site/wwwroot/EventHubTrigger1/function.json",
        "test_data_href": "https://eventhubrepfunction.azurewebsites.net/admin/vfs/data/Functions/sampledata/EventHubTrigger1.dat",
        "href": "https://eventhubrepfunction.azurewebsites.net/admin/functions/EventHubTrigger1",
        "config": {},
        "language": "node",
        "isDisabled": false
      }
    },
    {
      "type": "Microsoft.Web/sites/functions",
      "apiVersion": "2021-02-01",
      "name": "[concat(parameters('sites_teltonikapoc_name'), '/EventHubTrigger1')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('sites_teltonikapoc_name'))]"
      ],
      "properties": {
        "script_root_path_href": "https://teltonikapoc.azurewebsites.net/admin/vfs/site/wwwroot/EventHubTrigger1/",
        "script_href": "https://teltonikapoc.azurewebsites.net/admin/vfs/site/wwwroot/EventHubTrigger1/index.js",
        "config_href": "https://teltonikapoc.azurewebsites.net/admin/vfs/site/wwwroot/EventHubTrigger1/function.json",
        "test_data_href": "https://teltonikapoc.azurewebsites.net/admin/vfs/data/Functions/sampledata/EventHubTrigger1.dat",
        "href": "https://teltonikapoc.azurewebsites.net/admin/functions/EventHubTrigger1",
        "config": {},
        "test_data": "{ id: \"03b79899-831b-4529-9dbc-2fc347651d25\", \"longitude\": 80.1197866, \"latitude\": 12.9440616, \"altitude\": 10, \"angle\": 54, \"satellites\": 10, \"speed\": 0 }",
        "language": "node",
        "isDisabled": false
      }
    },
    {
      "type": "Microsoft.Web/sites/functions",
      "apiVersion": "2021-02-01",
      "name": "[concat(parameters('sites_teltonikapoc_name'), '/TimerEventToCosmosTrigger')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('sites_teltonikapoc_name'))]"
      ],
      "properties": {
        "script_root_path_href": "https://teltonikapoc.azurewebsites.net/admin/vfs/site/wwwroot/TimerEventToCosmosTrigger/",
        "script_href": "https://teltonikapoc.azurewebsites.net/admin/vfs/site/wwwroot/TimerEventToCosmosTrigger/index.js",
        "config_href": "https://teltonikapoc.azurewebsites.net/admin/vfs/site/wwwroot/TimerEventToCosmosTrigger/function.json",
        "test_data_href": "https://teltonikapoc.azurewebsites.net/admin/vfs/data/Functions/sampledata/TimerEventToCosmosTrigger.dat",
        "href": "https://teltonikapoc.azurewebsites.net/admin/functions/TimerEventToCosmosTrigger",
        "config": {},
        "language": "node",
        "isDisabled": false
      }
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2021-02-01",
      "name": "[concat(parameters('sites_EventHubRepFunction_name'), '/', parameters('sites_EventHubRepFunction_name'), '.azurewebsites.net')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('sites_EventHubRepFunction_name'))]"
      ],
      "properties": {
        "siteName": "EventHubRepFunction",
        "hostNameType": "Verified"
      }
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2021-02-01",
      "name": "[concat(parameters('sites_teltonikapoc_name'), '/', parameters('sites_teltonikapoc_name'), '.azurewebsites.net')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('sites_teltonikapoc_name'))]"
      ],
      "properties": {
        "siteName": "teltonikapoc",
        "hostNameType": "Verified"
      }
    },
    {
      "type": "Microsoft.DataMigration/services",
      "apiVersion": "2021-06-30",
      "name": "[parameters('services_Ford_Data_Migration_name')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_ford_demo_vnet_name'), 'ford-demo-subnet')]"
      ],
      "sku": {
        "name": "Standard_1vCores",
        "tier": "Standard",
        "size": "1 vCores"
      },
      "kind": "Cloud",
      "properties": {
        "virtualSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_ford_demo_vnet_name'), 'ford-demo-subnet')]"
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2021-10-15",
      "name": "[concat(parameters('databaseAccounts_aikidocosmoslab_name'), '/ImportDatabase/AikidoLogs')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_aikidocosmoslab_name'), 'ImportDatabase')]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_aikidocosmoslab_name'))]"
      ],
      "properties": {
        "resource": {
          "id": "AikidoLogs",
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/\"_etag\"/?"
              }
            ]
          },
          "partitionKey": {
            "paths": ["/logs"],
            "kind": "Hash"
          },
          "uniqueKeyPolicy": {
            "uniqueKeys": []
          },
          "conflictResolutionPolicy": {
            "mode": "LastWriterWins",
            "conflictResolutionPath": "/_ts"
          }
        }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2021-10-15",
      "name": "[concat(parameters('databaseAccounts_aikidocosmoslab_name'), '/siem/firewall_raw_log')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_aikidocosmoslab_name'), 'siem')]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_aikidocosmoslab_name'))]"
      ],
      "properties": {
        "resource": {
          "id": "firewall_raw_log",
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/\"_etag\"/?"
              }
            ]
          },
          "partitionKey": {
            "paths": ["/id"],
            "kind": "Hash"
          },
          "uniqueKeyPolicy": {
            "uniqueKeys": []
          },
          "conflictResolutionPolicy": {
            "mode": "LastWriterWins",
            "conflictResolutionPath": "/_ts"
          }
        }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2021-10-15",
      "name": "[concat(parameters('databaseAccounts_aikidocosmoslab_name'), '/fmcTesting/fmc001')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_aikidocosmoslab_name'), 'fmcTesting')]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_aikidocosmoslab_name'))]"
      ],
      "properties": {
        "resource": {
          "id": "fmc001",
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/\"_etag\"/?"
              }
            ]
          },
          "partitionKey": {
            "paths": ["/_partitionKey"],
            "kind": "Hash",
            "version": 2
          },
          "conflictResolutionPolicy": {
            "mode": "LastWriterWins",
            "conflictResolutionPath": "/_ts"
          }
        }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2021-10-15",
      "name": "[concat(parameters('databaseAccounts_aikidocosmoslab_name'), '/teltonikadb/teltonikacont')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_aikidocosmoslab_name'), 'teltonikadb')]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_aikidocosmoslab_name'))]"
      ],
      "properties": {
        "resource": {
          "id": "teltonikacont",
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/\"_etag\"/?"
              }
            ]
          },
          "partitionKey": {
            "paths": ["/pk"],
            "kind": "Hash"
          },
          "uniqueKeyPolicy": {
            "uniqueKeys": []
          },
          "conflictResolutionPolicy": {
            "mode": "LastWriterWins",
            "conflictResolutionPath": "/_ts"
          }
        }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2021-10-15",
      "name": "[concat(parameters('databaseAccounts_aikidocosmoslab_name'), '/siem/test')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_aikidocosmoslab_name'), 'siem')]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_aikidocosmoslab_name'))]"
      ],
      "properties": {
        "resource": {
          "id": "test",
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/\"_etag\"/?"
              }
            ]
          },
          "partitionKey": {
            "paths": ["/id"],
            "kind": "Hash"
          },
          "uniqueKeyPolicy": {
            "uniqueKeys": []
          },
          "conflictResolutionPolicy": {
            "mode": "LastWriterWins",
            "conflictResolutionPath": "/_ts"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('virtualMachines_db2_win_azure_name')]",
      "location": "[variables('location')]",
      "apiVersion": "2021-03-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_db2_win_azure41_name'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS1_v2"
        },
        "osProfile": {
          "computerName": "winserver",
          "adminUsername": "adminwinuser",
          "adminPassword": "Password@123"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            }
          },
          "dataDisks": [
            {
              "diskSizeGB": 250,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_db2_win_azure41_name'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('virtualMachines_Aikido_2_name')]",
      "location": "[variables('location')]",
      "apiVersion": "2021-03-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_aikido_2416_name'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS1_v2"
        },
        "osProfile": {
          "computerName": "winserver",
          "adminUsername": "adminwinuser",
          "adminPassword": "Password@123"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            }
          },
          "dataDisks": [
            {
              "diskSizeGB": 250,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_aikido_2416_name'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('virtualMachines_Aikido_ford_name')]",
      "location": "[variables('location')]",
      "apiVersion": "2021-03-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_aikido_ford401_name'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS1_v2"
        },
        "osProfile": {
          "computerName": "winserver",
          "adminUsername": "adminwinuser",
          "adminPassword": "Password@123"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            }
          },
          "dataDisks": [
            {
              "diskSizeGB": 250,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_aikido_ford401_name'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-07-01",
      "name": "[parameters('virtualMachines_kafka_azure_name')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_kafka_azure772_name'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_D2s_v3"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18.04-LTS",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            }
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachines_kafka_azure_name')]",
          "adminUsername": "adminuser",
          "adminPassword": "Password!12",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false,
            "provisionVMAgent": true,
            "patchSettings": {
              "patchMode": "ImageDefault",
              "assessmentMode": "ImageDefault"
            }
          },
          "secrets": [],
          "allowExtensionOperations": true,
          "requireGuestProvisionSignal": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_kafka_azure772_name'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-07-01",
      "name": "[parameters('virtualMachines_ford_demo_name')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ford_demo438_name'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_D2s_v3"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18.04-LTS",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            }
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachines_ford_demo_name')]",
          "adminUsername": "adminuser",
          "adminPassword": "Password!12",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false,
            "provisionVMAgent": true,
            "patchSettings": {
              "patchMode": "ImageDefault",
              "assessmentMode": "ImageDefault"
            }
          },
          "secrets": [],
          "allowExtensionOperations": true,
          "requireGuestProvisionSignal": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ford_demo438_name'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        }
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
      "apiVersion": "2021-11-01",
      "name": "[concat(parameters('namespaces_replication_test_name'), '/iot1/iot1policy')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('namespaces_replication_test_name'), 'iot1')]",
        "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_replication_test_name'))]"
      ],
      "properties": {
        "rights": ["Manage", "Listen", "Send"]
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
      "apiVersion": "2021-11-01",
      "name": "[concat(parameters('namespaces_replication_test_name'), '/iot2/iot2policy')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('namespaces_replication_test_name'), 'iot2')]",
        "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_replication_test_name'))]"
      ],
      "properties": {
        "rights": ["Manage", "Listen", "Send"]
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
      "apiVersion": "2021-11-01",
      "name": "[concat(parameters('namespaces_replication_test_name'), '/azure-eh/listentoeventhub')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('namespaces_replication_test_name'), 'azure-eh')]",
        "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_replication_test_name'))]"
      ],
      "properties": {
        "rights": ["Listen"]
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
      "apiVersion": "2021-11-01",
      "name": "[concat(parameters('namespaces_replication_test_name'), '/azure-eh-nodejs/receive-from-eh-nodejs')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('namespaces_replication_test_name'), 'azure-eh-nodejs')]",
        "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_replication_test_name'))]"
      ],
      "properties": {
        "rights": ["Listen"]
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
      "apiVersion": "2021-11-01",
      "name": "[concat(parameters('namespaces_replication_test_name'), '/azure-eh-nodejs/send-to-eh-nodejs')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('namespaces_replication_test_name'), 'azure-eh-nodejs')]",
        "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_replication_test_name'))]"
      ],
      "properties": {
        "rights": ["Send"]
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
      "apiVersion": "2021-11-01",
      "name": "[concat(parameters('namespaces_replication_test_name'), '/azure-eh/senttoeventhub')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('namespaces_replication_test_name'), 'azure-eh')]",
        "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_replication_test_name'))]"
      ],
      "properties": {
        "rights": ["Send"]
      }
    },
    {
      "type": "Microsoft.Network/connections",
      "apiVersion": "2020-11-01",
      "name": "[parameters('connections_forddemocoonection_name')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_ford_demo_vnetgateway_name'))]",
        "[resourceId('Microsoft.Network/localNetworkGateways', parameters('localNetworkGateways_forddemo_localnetwork_name'))]"
      ],
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_ford_demo_vnetgateway_name'))]"
        },
        "localNetworkGateway2": {
          "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('localNetworkGateways_forddemo_localnetwork_name'))]"
        },
        "connectionType": "IPsec",
        "connectionProtocol": "IKEv2",
        "routingWeight": 0,
        "sharedKey": "forddemo@123",
        "enableBgp": false,
        "useLocalAzureIpAddress": false,
        "usePolicyBasedTrafficSelectors": false,
        "ipsecPolicies": [],
        "trafficSelectorPolicies": [],
        "expressRouteGatewayBypass": false,
        "dpdTimeoutSeconds": 0,
        "connectionMode": "Default"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworkGateways",
      "apiVersion": "2020-11-01",
      "name": "[parameters('virtualNetworkGateways_ford_demo_vnetgateway_name')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_ford_demo_vnetgateway_publicIP_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_ford_demo_vnet_name'), 'GatewaySubnet')]"
      ],
      "tags": {
        "Name": "ford-demo-vnetgateway"
      },
      "properties": {
        "enablePrivateIpAddress": false,
        "ipConfigurations": [
          {
            "name": "default",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_ford_demo_vnetgateway_publicIP_name'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_ford_demo_vnet_name'), 'GatewaySubnet')]"
              }
            }
          }
        ],
        "sku": {
          "name": "VpnGw2",
          "tier": "VpnGw2"
        },
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": false,
        "activeActive": false,
        "bgpSettings": {
          "asn": 65515,
          "bgpPeeringAddress": "172.16.1.254",
          "peerWeight": 0,
          "bgpPeeringAddresses": [
            {
              "ipconfigurationId": "[concat(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_ford_demo_vnetgateway_name')), '/ipConfigurations/default')]",
              "customBgpIpAddresses": []
            }
          ]
        },
        "vpnGatewayGeneration": "Generation2"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_teltonikafmc003_name'), '/default/azure-webjobs-eventhub')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_teltonikafmc003_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_teltonikafmc003_name'))]"
      ],
      "properties": {
        "immutableStorageWithVersioning": {
          "enabled": false
        },
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_eventhubrepfunction_name'), '/default/azure-webjobs-hosts')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_eventhubrepfunction_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_eventhubrepfunction_name'))]"
      ],
      "properties": {
        "immutableStorageWithVersioning": {
          "enabled": false
        },
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_teltonikafmc003_name'), '/default/azure-webjobs-hosts')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_teltonikafmc003_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_teltonikafmc003_name'))]"
      ],
      "properties": {
        "immutableStorageWithVersioning": {
          "enabled": false
        },
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_eventhubrepfunction_name'), '/default/azure-webjobs-secrets')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_eventhubrepfunction_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_eventhubrepfunction_name'))]"
      ],
      "properties": {
        "immutableStorageWithVersioning": {
          "enabled": false
        },
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_teltonikafmc003_name'), '/default/azure-webjobs-secrets')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_teltonikafmc003_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_teltonikafmc003_name'))]"
      ],
      "properties": {
        "immutableStorageWithVersioning": {
          "enabled": false
        },
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_sqlvamqrcrrkf6bowu_name'), '/default/copyactivity-logs')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_sqlvamqrcrrkf6bowu_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_sqlvamqrcrrkf6bowu_name'))]"
      ],
      "properties": {
        "immutableStorageWithVersioning": {
          "enabled": false
        },
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_evthub_name'), '/default/eventblob')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_evthub_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_evthub_name'))]"
      ],
      "properties": {
        "immutableStorageWithVersioning": {
          "enabled": false
        },
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Blob"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_evthubnodejs_name'), '/default/eventblobnodejs')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_evthubnodejs_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_evthubnodejs_name'))]"
      ],
      "properties": {
        "immutableStorageWithVersioning": {
          "enabled": false
        },
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Blob"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_sqlvamqrcrrkf6bowu_name'), '/default/fordblob1')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_sqlvamqrcrrkf6bowu_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_sqlvamqrcrrkf6bowu_name'))]"
      ],
      "properties": {
        "immutableStorageWithVersioning": {
          "enabled": false
        },
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_teltonikafmc003_name'), '/default/gps-data')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_teltonikafmc003_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_teltonikafmc003_name'))]"
      ],
      "properties": {
        "immutableStorageWithVersioning": {
          "enabled": false
        },
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_sqlvamqrcrrkf6bowu_name'), '/default/vulnerability-assessment')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_sqlvamqrcrrkf6bowu_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_sqlvamqrcrrkf6bowu_name'))]"
      ],
      "properties": {
        "immutableStorageWithVersioning": {
          "enabled": false
        },
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_eventhubrepfunction_name'), '/default/', parameters('storageAccounts_eventhubrepfunction_name'), 'ecfc9b')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccounts_eventhubrepfunction_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_eventhubrepfunction_name'))]"
      ],
      "properties": {
        "accessTier": "TransactionOptimized",
        "shareQuota": 5120,
        "enabledProtocols": "SMB"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_teltonikafmc003_name'), '/default/teltonikapocb507')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccounts_teltonikafmc003_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_teltonikafmc003_name'))]"
      ],
      "properties": {
        "accessTier": "TransactionOptimized",
        "shareQuota": 5120,
        "enabledProtocols": "SMB"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2021-06-01",
      "name": "[concat(parameters('storageAccounts_sqlvamqrcrrkf6bowu_name'), '/default/test')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccounts_sqlvamqrcrrkf6bowu_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_sqlvamqrcrrkf6bowu_name'))]"
      ],
      "properties": {
        "accessTier": "TransactionOptimized",
        "shareQuota": 6,
        "enabledProtocols": "SMB"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "[parameters('networkInterfaces_aikido_1186_name')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_aikido_1_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Azure_GCP_Migration_vnet_name'), 'default')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_aikido_1_nsg_name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.0.0.5",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_aikido_1_ip_name'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Azure_GCP_Migration_vnet_name'), 'default')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_aikido_1_nsg_name'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "[parameters('networkInterfaces_aikido_2416_name')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_Aikido_2_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Azure_GCP_Migration_vnet_name'), 'default')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Aikido_2_nsg_name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.0.0.6",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_Aikido_2_ip_name'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Azure_GCP_Migration_vnet_name'), 'default')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Aikido_2_nsg_name'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "[parameters('networkInterfaces_aikido_ford401_name')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_Aikido_ford_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Azure_GCP_Migration_vnet_name'), 'default')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Aikido_ford_nsg_name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.0.0.4",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_Aikido_ford_ip_name'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Azure_GCP_Migration_vnet_name'), 'default')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Aikido_ford_nsg_name'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "[parameters('networkInterfaces_db2_win_azure41_name')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_db2_azure_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Azure_GCP_Migrationvnet955_name'), 'default')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_db2winazurensg855_name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.2.0.4",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_db2_azure_ip_name'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Azure_GCP_Migrationvnet955_name'), 'default')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableAcceleratedNetworking": true,
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_db2winazurensg855_name'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "[parameters('networkInterfaces_ford_demo438_name')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_ford_demo_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_ford_demo_vnet_name'), 'ford-demo-subnet')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_ford_demo_nsg_name'))]"
      ],
      "tags": {
        "Name": "ford-demo-server"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "172.16.0.4",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_ford_demo_ip_name'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_ford_demo_vnet_name'), 'ford-demo-subnet')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_ford_demo_nsg_name'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "[parameters('networkInterfaces_kafka_azure772_name')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_kafka_azure_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Azure_GCP_Migrationvnet144_name'), 'default')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_kafka_azure_nsg_name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.1.0.4",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_kafka_azure_ip_name'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Azure_GCP_Migrationvnet144_name'), 'default')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableAcceleratedNetworking": true,
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_kafka_azure_nsg_name'))]"
        }
      }
    }
  ]
}
